apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-tester-configmap
  namespace: gp-vault
data:
  config.hcl: "storage \"raft\" {\n\tpath = \"/data\"\n}\nlistener \"tcp\" {\n  address = \"127.0.0.1:8200\"\n  tls_disable = true\n}\ndisable_mlock = true\ncluster_addr = \"http://bla:8200\"\napi_addr = \"http://127.0.0.1:8200\"\nseal \"gcpckms\" {\n\tcredentials = \"/vault/userconfig/unseal-creds/creds.json\"\n\tproject = \"gepaplexx\"\n\tregion = \"europe-west6\"\n\tkey_ring = \"gepaplexx-keyring\"\n\tcrypto_key = \"vault-key\"\n\tdisabled = \"false\"\n}"
binaryData: {}
immutable: false
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-backup-tester
  namespace: gp-vault
spec:
  backoffLimit: 1
  parallelism: 1
  completions: 1
  template:
    spec:
      containers:
        - name: "vault-raft-backup-tester"
          image: 'hashicorp/vault:1.13.1'
          env:
            - name: VAULT_ADDR
              value: "http://127.0.0.1:8200"
            - name: HOME
              value: /data
          command: ["/bin/sh", "-ec"]
          args:
            - vault server -config=/vault/config/config.hcl
              & sleep 10
              && ROOT_TOKEN_FRAGMENT=$(vault operator init -format=json | grep root_token)
              && ROOT_TOKEN=$(echo ${ROOT_TOKEN_FRAGMENT:17:-1})
              && vault login $ROOT_TOKEN
              && vault operator raft snapshot restore -force /backup/latest
              && vault status
              && export VAULT_TOKEN=$(vault write -field=token auth/kubernetes/login role="backup-tester" jwt=$(cat /run/secrets/kubernetes.io/serviceaccount/token))
              && if [ -z $(vault auth list | grep oidc) ]; then echo "oidc auth not found in backup!"; exit 1; fi
              && if [ -z $(vault secrets list | grep cluster/config/) ]; then echo "cluster/config/ secret store not found in backup!"; exit 1; fi
          resources:
            requests:
              memory: '100Mi'
              cpu: '100m'
            limits:
              memory: "600Mi"
          volumeMounts:
            - name: backup-volume
              mountPath: /backup
            - name: unseal-creds
              readOnly: true
              mountPath: /vault/userconfig/unseal-creds
            - name: config
              mountPath: /vault/config
            - name: temp-data
              mountPath: /data
      volumes:
        - name: backup-volume
          persistentVolumeClaim:
            claimName: 'gp-vault-backup-pvc'
        - name: unseal-creds
          secret:
            secretName: gcp-creds
            defaultMode: 420
            optional: false
        - name: config
          configMap:
            name: backup-tester-configmap
            defaultMode: 420
        - name: temp-data
          emptyDir:
            sizeLimit: 100Mi
      serviceAccountName: vault-backup-sa
      restartPolicy: Never